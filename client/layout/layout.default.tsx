import type { NextPage } from 'next';
import Head from 'next/head';
import HeaderPanell from "../components/header.panel";
import { IQuery } from "../dto/query";
import {IUser} from "../dto/user";
import {createContext, useEffect, useState} from "react";
import PopupWrong from "../components/popup.wrong";
import {useDispatch, useSelector} from "react-redux";
import Cookies from "js-cookie";
import {setProfile} from "../redux/user/userSlice";

interface IWrong {
  active: boolean,
  message: string
}

interface ILayoutDefault {
  title: string,
  user: IUser,
  query: IQuery,
};

interface IContext {
  user: IUser,
  query: IQuery,
  win: number,
  wrong: (message: string) => void,
}

export const DataContext = createContext({} as IContext);

const LayoutDefault: NextPage<ILayoutDefault> = ({title, user, query, children,}) => {
  const profile = useSelector(( store: any ) => store.user);
  const [win, setWin] = useState<number>(Date.now());
  const [wrong, setWrong] = useState<IWrong>({} as IWrong);

  const wrongActive = (message: string): void => {
    setWrong({ active: true, message});
  }

  useEffect(() => {
    if(window) window.addEventListener('click', () => setWin(Date.now()))
  },[])

  return (
    <DataContext.Provider value={{user: profile, query, win, wrong: wrongActive}}>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <HeaderPanell />
      </header>
      <main id="main">
        <div className="container">{children}</div>
      </main>
      <footer id="footer"/>
      {wrong.active && <PopupWrong message={wrong.message} close={() =>  setWrong({...wrong, active: false})} /> }
    </DataContext.Provider>
  )
};

export default LayoutDefault;